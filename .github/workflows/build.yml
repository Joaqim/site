name: Build

on:
  workflow_call:
    # https://docs.github.com/actions/using-workflows/sharing-workflows-secrets-and-runners-with-your-organization
    # https://docs.github.com/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputs
    inputs:
      dry-run:
        description: 'Skip deployment (just build)'
        default: ${{ github.event_name == 'pull_request' || github.ref != 'refs/heads/main' }}
        required: false
        type: boolean
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/build.yml"
      - "app"
      - "content"
      - "public"
      - "*.lock"
      - "*.nix"
      - "*.ts"
      - "*.json"
  pull_request:
    types: [synchronize, opened, reopened]
    paths:
      - ".github/workflows/build.yml"
      - "app/**"
      - "content/**"
      - "public/**"
      - "*.lock"
      - "*.nix"
      - "*.ts"
      - "*.json"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Nix flake inputs
        uses: DeterminateSystems/flake-checker-action@v11
        with:
          send-statistics: false

      - name: Install Nix with Attic Cache
        uses: Joaqim/pkgs/.github/actions/install-nix-with-attic-cache@main
        with:
          attic-endpoint: ${{ vars.ATTIC_ENDPOINT }}
          attic-cache-name: jqpkgs
          extra-nix-config: |
            substituters = https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/
            trusted-public-keys = nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            extra-substituters = ${{ vars.MY_BINARY_CACHE }}?priority=43
            extra-trusted-public-keys = ${{ vars.MY_BINARY_CACHE_PUBLIC_KEY }}
          tailscale-oauth-client-id: ${{ vars.TS_OAUTH_CLIENT_ID }}
          
          # Secrets
          tailscale-oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          attic-token: ${{ secrets.ATTIC_TOKEN }}
          github-token: ${{ secrets.GH_READ_TOKEN }}
          
      - name: Build Site
        run: nix build -L
      
      - name: Upload Pages Artifact
        if: (!inputs.dry-run)
        id: deployment
        uses: "actions/upload-pages-artifact@v3.0.1"
        with:
          path: result/public

  deploy:
    if: (!inputs.dry-run)
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
